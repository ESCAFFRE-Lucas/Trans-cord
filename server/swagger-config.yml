openapi: 3.0.0
info:
  title: My API
  version: '1.0.0'
  description: Translate API
tags:
  - name: User
    description: Operations related to users
  - name: Translate
    description: Operations related to translate
security:
  - apiKey: [ ]
paths:
  /translate:
    post:
      tags:
        - Translate
      summary: Translate a text
      description: Translate a text
      operationId: addTranslate
      security: [ ]
      requestBody:
        $ref: '#/components/requestBodies/TranslateCreation'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/MissingFieldsError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Translate
      summary: Get all traductions
      description: Returns all traductions
      operationId: getTraductions
      security: [ ]
      responses:
        '200':
          description: Traductions fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TranslateList'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /translate/{discordId}:
    get:
      tags:
        - Translate
      summary: Get a translation by discord id
      description: Get a translation by discord id
      operationId: getTraductionByDiscordId
      security: [ ]
      parameters:
        - name: discordId
          in: path
          description: Discord id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Traductions fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Translate'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Translate
      summary: Delete a translation by translate id
      description: Delete a translation by translate id
      operationId: deleteTraductionByTranslateId
      security: [ ]
      parameters:
        - name: translateId
          in: path
          description: Translate id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Traductions deleted successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Translate'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth:
    get:
      tags:
        - User
      summary: Get all users
      description: Returns all users
      operationId: getUsers
      security:
        - apiKey: [ ]
      responses:
        '200':
          description: Users fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserList'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/register:
    post:
      tags:
        - User
      summary: Register a new user
      description: Register a new user
      security: [ ]
      requestBody:
        $ref: '#/components/requestBodies/UserCreation'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/MissingFieldsError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/login:
    post:
      tags:
        - User
      summary: Login
      description: Login
      security: [ ]
      requestBody:
        $ref: '#/components/requestBodies/UserLogin'
      responses:
        '200':
          $ref: '#/components/responses/Login'
        '400':
          $ref: '#/components/responses/MissingFieldsError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/{userId}:
    get:
      tags:
        - User
      summary: Get a user by id
      description: Get a user by id
      security:
        - apiKey: [ ]
      responses:
        '200':
          description: User fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: Authorization
      in: header
  parameters:
    idInPath:
      name: id
      in: path
      description: ID of the resource
      required: true
      schema:
        type: string
  schemas:
    TranslateList:
      type: object
      required: [ text, language, discordId ]
      properties:
        success:
          type: boolean
          default: true
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Translate'
    Translate:
      type: object
      required: [ text, language, discordId ]
      properties:
        text:
          type: string
          example: "Bonjour Ã  tous"
        language:
          type: string
          example: "en-US"
        discordId:
          type: string
          example: "123456789"
    UserList:
      type: object
      required: [ username, password ]
      properties:
        success:
          type: boolean
          default: true
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      type: object
      required: [ username, password ]
      properties:
        username:
          type: string
          example: "username"
        password:
          type: string
          example: "password"
  requestBodies:
    TranslateCreation:
      required: true
      description: Translate creation
      content:
        application/json:
          schema:
            required: [ text, language, discordId ]
            allOf:
              - $ref: '#/components/schemas/Translate'
    UserCreation:
      required: true
      description: User creation
      content:
        application/json:
          schema:
            required: [ username, password ]
            allOf:
              - $ref: '#/components/schemas/User'
    UserLogin:
      required: true
      description: User login
      content:
        application/json:
          schema:
            required: [ username, password ]
            allOf:
              - $ref: '#/components/schemas/User'
  responses:
    Login:
      description: Login
      content:
        application/json:
          schema:
            type: object
            required: [ success, token ]
            properties:
              success:
                type: boolean
                default: true
                example: true
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6"
    Created:
      description: Created
      content:
        application/json:
          schema:
            type: object
            required: [ success, id ]
            properties:
              success:
                type: boolean
                default: true
                example: true
              id:
                type: string
                example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
    InvalidBody:
      description: Invalid body
      content:
        application/json:
          schema:
            type: object
            required: [ success, message ]
            properties:
              success:
                type: boolean
                default: false
                example: false
              message:
                type: string
                example: "Invalid body"
    MissingFieldsError:
      description: Missing fields
      content:
        application/json:
          schema:
            type: object
            required: [ success, message ]
            properties:
              success:
                type: boolean
                default: false
                example: false
              message:
                type: string
                example: "Missing fields"
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            required: [ success, message ]
            properties:
              success:
                type: boolean
                default: false
                example: false
              message:
                type: string
                example: "Forbidden"
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            required: [ success, message ]
            properties:
              success:
                type: boolean
                default: false
                example: false
              message:
                type: string
                example: "Bad request"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            required: [ success, message ]
            properties:
              success:
                type: boolean
                default: false
                example: false
              message:
                type: string
                example: "Internal server error"